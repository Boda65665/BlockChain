syntax = "proto3";
package node.communication.base;
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "Entity.proto";
message DownloadRequest{
  int32 lastNumberBlock = 1;
  string type = 2;
}
message DownloadResponse{
  repeated entity.Block blocks = 1;
  repeated entity.Block poolBLocks = 2;
  repeated entity.Transaction poolTransactions = 3;
  entity.BlockChainInfoConstruct blockChainInfo = 4;
}
message TestRequest{
  int32 lastNumberBlock = 1;
}
message PingRequest{
}
message PingResponse{
}
message TestResponse{
  string test = 1;
}
enum ErrorCod {
  INVALID_NUMBER_BLOCK = 0;
  NOT_FOUND = 1;
  THIS_NODE_IS_NOT_VALID = 2;

  DATA_BE_NULL = 3;
  ALREADY_EXISTS = 4;
  INCORRECT_DATA = 5;
}

message ExceptionResponse {
  google.protobuf.Timestamp timestamp = 1;
  ErrorCod error_code = 2;
}
message UpdateRequest{
  oneof data {
    entity.Block block = 1;
    entity.Transaction transaction = 2;
  }
  entity.BlockChainInfoConstruct blockChainInfo = 4;
}
message UpdateResponse{
  bool isUpdate = 1;
}


message IsUpdateRequest{
  oneof infoAboutLastData {
      int32 lastNumberBlock = 1;
      string lastTransactionHash = 2;
  }
}
message IsUpdateResponse{
  bool isUpdate = 1;
}

service NodeCommunication{
  rpc test(TestRequest) returns (TestResponse);
  rpc ping(PingRequest) returns (PingResponse);
  rpc download(DownloadRequest) returns (DownloadResponse);
  rpc isUpdate(IsUpdateRequest) returns (IsUpdateResponse);
  rpc update(UpdateRequest) returns (UpdateResponse);
}